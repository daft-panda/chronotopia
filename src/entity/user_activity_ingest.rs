//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.8

use super::sea_orm_active_enums::ActivityType;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "user_activity_ingest")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub batch_id: Uuid,
    pub r#type: ActivityType,
    pub confidence: i32,
    pub start_date_time: DateTimeWithTimeZone,
    pub end_date_time: Option<DateTimeWithTimeZone>,
    pub step_count: Option<i64>,
    #[sea_orm(column_type = "Double", nullable)]
    pub distance: Option<f64>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::ingest_batches::Entity",
        from = "Column::BatchId",
        to = "super::ingest_batches::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    IngestBatches,
}

impl Related<super::ingest_batches::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::IngestBatches.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
