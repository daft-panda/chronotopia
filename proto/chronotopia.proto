syntax = "proto3";
import "google/protobuf/wrappers.proto";
import "common.proto";

package chronotopia;

service Chronotopia {
    rpc OSMNetworkAroundPoint(LatLon) returns (google.protobuf.StringValue);
    rpc AnalyzeSegmentConnectivity(ConnectivityRequest) returns (google.protobuf.StringValue);
    rpc DebugWindowPathFinding(WindowDebugRequest) returns (PathfindingDebugInfo);
}

message WindowDebugRequest {
    string trip_id = 1;
    uint32 window_index = 2;
    uint32 start_point = 3;
    uint32 end_point = 4;
    optional uint64 from_segment_id = 5;
    optional uint64 to_segment_id = 6;
}

message ConnectivityRequest {
    string trip_id = 1;
    optional uint32 start_point_index = 2;
    optional uint32 end_point_index = 3;
    optional uint64 from_segment_id = 4;
    optional uint64 to_segment_id = 5;
}


message PathfindingDebugInfo {
    uint32 start_point_idx = 1;
    uint32 end_point_idx = 2;
    repeated SegmentCandidate start_candidates = 3;
    repeated SegmentCandidate end_candidates = 4;
    repeated PointConstraintPair constraints = 5;
    repeated PathfindingAttempt attempted_pairs = 6;
    map<uint32, uint32> constrained_candidates = 7;
    string reason = 8;
}

message SegmentCandidate {
    RoadSegment segment = 1;
    double distance = 2;
    Point projection = 3;
    double cost = 4;
}

message PointConstraintPair {
    uint32 point_idx = 1;
    uint64 segment_id = 2;
}

message PathfindingAttempt {
    uint64 from_segment = 1;
    uint64 from_osm_way = 2;
    uint64 to_segment = 3;
    uint64 to_osm_way = 4;
    double distance = 5;
    PathfindingResult result = 6;
}

message PathfindingResult {
    enum ResultType {
        SUCCESS = 0;
        TOO_FAR = 1;
        NO_CONNECTION = 2;
        NO_PATH_FOUND = 3;
    }
    
    ResultType type = 1;
    repeated RoadSegment path = 2;
    double cost = 3;
    double max_distance = 4;
    double actual_distance = 5;
    string reason = 6;
}