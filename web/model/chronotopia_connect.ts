// @generated by protoc-gen-connect-es v1.5.0 with parameter "target=ts"
// @generated from file chronotopia.proto (package chronotopia, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { ConnectivityRequest, GetRouteMatchTraceRequest, LatLon, PathfindingDebugInfo, ProcessedTrip, RequestParameters, RouteMatchTrace, TripRequest, Trips, TripSummaries, WindowDebugRequest } from "./chronotopia_pb.js";
import { Empty, MethodKind, StringValue } from "@bufbuild/protobuf";

/**
 * @generated from service chronotopia.Chronotopia
 */
export const Chronotopia = {
  typeName: "chronotopia.Chronotopia",
  methods: {
    /**
     * @generated from rpc chronotopia.Chronotopia.GetTrips
     */
    getTrips: {
      name: "GetTrips",
      I: RequestParameters,
      O: Trips,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc chronotopia.Chronotopia.GetRouteMatchTrace
     */
    getRouteMatchTrace: {
      name: "GetRouteMatchTrace",
      I: GetRouteMatchTraceRequest,
      O: RouteMatchTrace,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc chronotopia.Chronotopia.GetTripSummaries
     */
    getTripSummaries: {
      name: "GetTripSummaries",
      I: Empty,
      O: TripSummaries,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc chronotopia.Chronotopia.GetTripGeoJSON
     */
    getTripGeoJSON: {
      name: "GetTripGeoJSON",
      I: TripRequest,
      O: StringValue,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc chronotopia.Chronotopia.GetProcessedTrip
     */
    getProcessedTrip: {
      name: "GetProcessedTrip",
      I: TripRequest,
      O: ProcessedTrip,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc chronotopia.Chronotopia.OSMNetworkAroundPoint
     */
    oSMNetworkAroundPoint: {
      name: "OSMNetworkAroundPoint",
      I: LatLon,
      O: StringValue,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc chronotopia.Chronotopia.AnalyzeSegmentConnectivity
     */
    analyzeSegmentConnectivity: {
      name: "AnalyzeSegmentConnectivity",
      I: ConnectivityRequest,
      O: StringValue,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc chronotopia.Chronotopia.DebugWindowPathFinding
     */
    debugWindowPathFinding: {
      name: "DebugWindowPathFinding",
      I: WindowDebugRequest,
      O: PathfindingDebugInfo,
      kind: MethodKind.Unary,
    },
  }
} as const;

